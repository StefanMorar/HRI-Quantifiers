"prompt","completion"
"Fetch a sugar bag","{'type':'command','expressions':[['|exists x1 (sugarBag(x1)).| >= 1']],'commands':['robot(x0) & sugarBag(x1) -> fetch(x0, x1).']}"
"Get many bananas","{'type':'command','expressions':[['|exists x1 (banana(x1)).| >= 10']],'commands':['robot(x0) & banana(x1) -> fetch(x0, x1).']}"
"Please fetch a couple of peppers","{'type':'command','expressions':[['|exists x1 (pepper(x1)).| >= 2']],'commands':['robot(x0) & pepper(x1) -> fetch(x0, x1).']}"
"Bring me RedChiliPepper1","{'type':'command','expressions':[[]],'commands':['robot(x0) -> fetch(x0, RedChiliPepper1).']}"
"Hi, get a few broccoli and put them on the counter","{'type':'command','expressions':[['|exists x1 (broccoli(x1)).| >= 3']],'commands':['robot(x0) & broccoli(x1) -> fetch(x0, x1).']}"
"Fetch some large bowls please","{'type':'command','expressions':[['|exists x1 (largeBowl(x1)).| >= 4']],'commands':['robot(x0) & largeBowl(x1) -> fetch(x0, x1).']}"
"Get Broccoli2 and Broccoli12","{'type':'command','expressions':[[],[]],'commands':['robot(x0) -> fetch(x0, Broccoli2).','robot(x0) -> fetch(x0, Broccoli12).']}"
"Fetch all green peppers","{'type':'command','expressions':[['|exists x1 (greenPepper(x1)).|']],'commands':['robot(x0) & greenPepper(x1) -> fetch(x0, x1).']}"
"Fetch half of the eggs","{'type':'command','expressions':[['|exists x1 (egg(x1)).| / 2']],'commands':['robot(x0) & egg(x1) -> fetch(x0, x1).']}"
"Get 15 large tomatoes","{'type':'command','expressions':[['|exists x1 (largeTomato(x1)).| >= 15']],'commands':['robot(x0) & largeTomato(x1) -> fetch(x0, x1).']}"
"Fetch three bananas","{'type':'command','expressions':[['|exists x1 (banana(x1)).| >= 3']],'commands':['robot(x0) & banana(x1) -> fetch(x0, x1).']}"
"fetch a couple of mangoes","{'type':'command','expressions':[['|exists x1 (mango(x1)).| >= 2']],'commands':['robot(x0) & mango(x1) -> fetch(x0, x1).']}"
"Fetch tray BakingTray1","{'type':'command','expressions':[[]],'commands':['robot(x0) & bakingTray(BakingTray1) -> fetch(x0, BakingTray1).']}"
"fetch exactly 2 bananas","{'type':'command','expressions':[['|exists x1 (banana(x1)).| >= 2']],'commands':['robot(x0) & banana(x1) -> fetch(x0, x1).']}"
"get at least 4 avocados","{'type':'command','expressions':[['|exists x1 (avocado(x1)).| >= 4']],'commands':['robot(x0) & avocado(x1) -> fetch(x0, x1).']}"
"Robot, go fetch 12 peppers","{'type':'command','expressions':[['|exists x1 (pepper(x1)).| >= 12']],'commands':['robot(x0) & pepper(x1) -> fetch(x0, x1).']}"
"fetch several green chili peppers","{'type':'command','expressions':[['|exists x1 (greenChiliPepper(x1)).| >= 5']],'commands':['robot(x0) & greenChiliPepper(x1) -> fetch(x0, x1).']}"
"FETCH A DOZEN EGGS","{'type':'command','expressions':[['|exists x1 (egg(x1)).| >= 12']],'commands':['robot(x0) & egg(x1) -> fetch(x0, x1).']}"
"Fetch cooking knives CK1 and CK2","{'type':'command','expressions':[[],[]],'commands':['robot(x0) & cookingKnife(CK1) -> fetch(x0, CK1).','robot(x0) & cookingKnife(CK2) -> fetch(x0, CK2).']}"
"Cook bakingTray1","{'type':'command','expressions':[[]],'commands':['robot(x0) & oven(x2) & kitchenCounter(x3) -> bake(x0, BakingTray1, x2, x3).']}"
"bake Tray10 in the oven","{'type':'command','expressions':[['|exists x2 (oven(x2)).| >= 1']],'commands':['robot(x0) & oven(x2) & kitchenCounter(x3) -> bake(x0, Tray10, x2, x3).']}"
"Bake BakingTray1, BakingTray12, LargeBowl100 and SmallBowl5","{'type':'command','expressions':[[],[],[],[]],'commands':['robot(x0) & oven(x2) & kitchenCounter(x3) -> bake(x0, BakingTray1, x2, x3).','robot(x0) & oven(x2) & kitchenCounter(x3) -> bake(x0, BakingTray12, x2, x3).','robot(x0) & oven(x2) & kitchenCounter(x3) -> bake(x0, LargeBowl100, x2, x3).','robot(x0) & oven(x2) & kitchenCounter(x3) -> bake(x0, SmallBowl5, x2, x3).']}"
"go cook baking tray Tray3 in Oven7","{'type':'command','expressions':[[]],'commands':['robot(x0) & bakingTray(Tray3) & kitchenCounter(x3) -> bake(x0, Tray3, Oven7, x3).']}"
"Cook bowl SmallBowl6 in oven Oven2","{'type':'command','expressions':[[]],'commands':['robot(x0) & bowl(SmallBowl6) & oven(Oven2) & kitchenCounter(x3) -> bake(x0, SmallBowl6, Oven2, x3).']}"
"Bake BakingTray4 in Oven1","{'type':'command','expressions':[[]],'commands':['robot(x0) & kitchenCounter(x3) -> bake(x0, BakingTray4, Oven1, x3).']}"
"bake Tray2","{'type':'command','expressions':[[]],'commands':['robot(x0) & oven(x2) & kitchenCounter(x3) -> bake(x0, Tray2, x2, x3).']}"
"bake Tray12 in any oven","{'type':'command','expressions':[['|exists x2 (oven(x2)).| >= 1']],'commands':['robot(x0) & oven(x2) & kitchenCounter(x3) -> bake(x0, Tray12, x2, x3).']}"
"Cook BakingTray9 in Oven1 and SmallBowl10 in Oven2","{'type':'command','expressions':[[],[]],'commands':['robot(x0) & kitchenCounter(x3) -> bake(x0, BakingTray9, Oven1, x3).','robot(x0) & kitchenCounter(x3) -> bake(x0, SmallBowl10, Oven2, x3).']}"
"Bake several baking trays","{'type':'command','expressions':[['|exists x1 (bakingTray(x1)).| >= 5']],'commands':['robot(x0) & bakingTray(x1) & oven(x2) & kitchenCounter(x3) -> bake(x0, x1, x2, x3).']}"
"Bake baking tray BT1 and put it on a counter","{'type':'command','expressions':[[]],'commands':['robot(x0) & bakingTray(BT1) & oven(x2) & kitchenCounter(x3) -> bake(x0, BT1, x2, x3).']}"
"Bake 3 baking trays","{'type':'command','expressions':[['|exists x1 (bakingTray(x1)).| >= 3']],'commands':['robot(x0) & bakingTray(x1) & oven(x2) & kitchenCounter(x3) -> bake(x0, x1, x2, x3).']}"
"Blend the contents of the bowl Bowl1 using a whisk","{'type':'command','expressions':[['|exists x2 (whisk(x2)).| >= 1']],'commands':['robot(x0) & bowl(Bowl1) & whisk(x2) -> mix(x0, Bowl1, x2).']}"
"Cut an broccoli stem","{'type':'command','expressions':[['|exists x1 (broccoliStem(x1)).| >= 1']],'commands':['robot(x0) & broccoliStem(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"time to cut a couple of carrots","{'type':'command','expressions':[['|exists x1 (carrot(x1)).| >= 2']],'commands':['robot(x0) & carrot(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"Cut many peppers with a knife","{'type':'command','expressions':[['|exists x1 (pepper(x1)).| >= 10','|exists x2 (cookingKnife(x2)).| >= 1']],'commands':['robot(x0) & pepper(x1) & cookingKnife(x2) -> cut(x0, x1, x2).']}"
"Cut some mangoes","{'type':'command','expressions':[['|exists x1 (mango(x1)).| >= 4']],'commands':['robot(x0) & mango(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"chope 6 cherries","{'type':'command','expressions':[['|exists x1 (cherry(x1)).| >= 6']],'commands':['robot(x0) & cherry(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"Cut BigBrownOnion2 and SmallOnion2","{'type':'command','expressions':[[],[]],'commands':['robot(x0) & cuttingTool(x2) -> cut(x0, BigBrownOnion2, x2).','robot(x0) & cuttingTool(x2) -> cut(x0, SmallOnion2, x2).']}"
"Cut onion RedOnion2","{'type':'command','expressions':[[]],'commands':['robot(x0) & onion(RedOnion2) & cuttingTool(x2) -> cut(x0, RedOnion2, x2).']}"
"Cut three carrots with any cutting tool","{'type':'command','expressions':[['|exists x1 (carrot(x1)).| >= 3','|exists x2 (cuttingTool(x2)).| >= 1']],'commands':['robot(x0) & carrot(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"Chope every potato","{'type':'command','expressions':[['|exists x1 (potato(x1)).|']],'commands':['robot(x0) & potato(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"chope a couple of potatoes","{'type':'command','expressions':[['|exists x1 (potato(x1)).| >= 2']],'commands':['robot(x0) & potato(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"slice Onion1 using CookingKnife1","{'type':'command','expressions':[[]],'commands':['robot(x0) -> cut(x0, Onion1, CookingKnife1).']}"
"cut some peppers with a knife","{'type':'command','expressions':[['|exists x1 (pepper(x1)).| >= 4','|exists x2 (cookingKnife(x2)).| >= 1']],'commands':['robot(x0) & pepper(x1) & cookingKnife(x2) -> cut(x0, x1, x2).']}"
"Line 1 baking tray","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 1','|exists x2 (bakingTray(x2)).| >= 1']],'commands':['robot(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Cover 5 trays with paper","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 5','|exists x2 (bakingTray(x2)).| >= 5']],'commands':['robot(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Line Tray1 with a sheet","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 1']],'commands':['robot(x0) & bakingSheet(x1) -> line(x0, x1, Tray1).']}"
"Cover Tray1 using Sheet2","{'type':'command','expressions':[[]],'commands':['robot(x0) -> line(x0, Sheet2, Tray1).']}"
"Cover BakingTray1 with BakingSheet1 and BakingTray2 with BakingSheet2","{'type':'command','expressions':[[],[]],'commands':['robot(x0) -> line(x0, BakingSheet1, BakingTray1).','robot(x0) -> line(x0, BakingSheet2, BakingTray2).']}"
"Line a few trays","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 3','|exists x2 (bakingTray(x2)).| >= 3']],'commands':['robot(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Cover several trays","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 5','|exists x2 (bakingTray(x2)).| >= 5']],'commands':['robot(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Using sheet Sheet21 cover tray Tray11","{'type':'command','expressions':[[]],'commands':['robot(x0) & bakingSheet(Sheet21) & bakingTray(Tray11) -> line(x0, Sheet21, Tray11).']}"
"Cover some baking trays","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 4','|exists x2 (bakingTray(x2)).| >= 4']],'commands':['robot(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Line several trays with baking sheets","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 5','|exists x2 (bakingTray(x2)).| >= 5']],'commands':['robot(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Line BakingTray3","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 1']],'commands':['robot(x0) & bakingSheet(x1) -> line(x0, x1, BakingTray3).']}"
"Line a lot of trays","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 10','|exists x2 (bakingTray(x2)).| >= 10']],'commands':['robot(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Mix Bowl1 using whisk Whisk2","{'type':'command','expressions':[[]],'commands':['robot(x0) & whisk(Whisk2) -> mix(x0, Bowl1, Whisk2).']}"
"Mix Bowl1","{'type':'command','expressions':[[]],'commands':['robot(x0) & whisk(x2) -> mix(x0, Bowl1, x2).']}"
"Mix b1","{'type':'command','expressions':[[]],'commands':['robot(x0) & whisk(x2) -> mix(x0, B1, x2).']}"
"Mix Bowl13 with a whisk","{'type':'command','expressions':[['|exists x2 (whisk(x2)).| >= 1']],'commands':['robot(x0) & whisk(x2) -> mix(x0, x1, Bowl13).']}"
"Blend smallBowl1 and smallBowl2","{'type':'command','expressions':[[],[]],'commands':['robot(x0) & whisk(x2) -> mix(x0, SmallBowl1, x2).','robot(x0) & whisk(x2) -> mix(x0, SmallBowl2, x2).']}"
"Mix bowls B12 and B21","{'type':'command','expressions':[[],[]],'commands':['robot(x0) & bowl(B12) & whisk(x2) -> mix(x0, B12, x2).','robot(x0) & bowl(B21) & whisk(x2) -> mix(x0, B21, x2).']}"
"Blend bowl called Bowl10","{'type':'command','expressions':[[]],'commands':['robot(x0) & bowl(Bowl10) & whisk(x2) -> mix(x0, Bowl10, x2).']}"
"Mix every bowl with a whisk","{'type':'command','expressions':[['|exists x1 (bowl(x1)).|,'|exists x2 (whisk(x2)).| >= 1']],'commands':['robot(x0) & bowl(x1) & whisk(x2) -> mix(x0, x1, x2).']}"
"Transfer Bowl3 to Bowl2","{'type':'command','expressions':[[]],'commands':['robot(x0) -> transfer(x0, Bowl3, Bowl2).']}"
"Move Bowl3 to Bowl2","{'type':'command','expressions':[[]],'commands':['robot(x0) -> transfer(x0, Bowl3, Bowl2).']}"
"Transfer bowl21 and bowl52 to bowl12","{'type':'command','expressions':[[],[]],'commands':['robot(x0) -> transfer(x0, Bowl21, Bowl12).','robot(x0) -> transfer(x0, Bowl52, Bowl12).']}"
"Shift contents of SmallBowl1 to another small bowl","{'type':'command','expressions':[['|exists x2 (smallBowl(x2)).| >= 1']],'commands':['robot(x0) & smallBowl(x2) -> transfer(x0, SmallBowl1, x2).']}"
"Transfer the contents of medium bowl B1 to a baking tray","{'type':'command','expressions':[['|exists x2 (bakingTray(x2)).| >= 1']],'commands':['robot(x0) & mediumBowl(Bowl1) & bakingTray(x2) -> transfer(x0, B1, x2).']}"
"Move contents of small bowl bowl1 to baking tray tray1","{'type':'command','expressions':[[]],'commands':['robot(x0) & smallBowl(Bowl1) & bakingTray(Tray1) -> transfer(x0, Bowl1, Tray1).']}"
"Sprinkle powdered sugar over Tray10","{'type':'command','expressions':[['|exists x1 (powderedSugar(x1)).| >= 1']],'commands':['robot(x0) & powderedSugar(x1) -> sprinkle(x0, x1, Tray10).']}"
"Sprinkle powdered sugar over baking tray BT1","{'type':'command','expressions':[['|exists x1 (powderedSugar(x1)).| >= 1']],'commands':['robot(x0) & powderedSugar(x1) & bakingTray(BT1) -> sprinkle(x0, x1, BT1).']}"
"Dust Sugar1 over baking trays Tray1 and Tray2","{'type':'command','expressions':[[],[]],'commands':['robot(x0) & bakingTray(Tray1) -> sprinkle(x0, Sugar1, Tray1).','robot(x0) & bakingTray(Tray2) -> sprinkle(x0, Sugar1, Tray2).']}"
"Dust powdered sugar Sugar1 over Tray1 and Tray2","{'type':'command','expressions':[[],[]],'commands':['robot(x0) & powderedSugar(Sugar1) -> sprinkle(x0, Sugar1, Tray1).','robot(x0) & powderedSugar(Sugar1) -> sprinkle(x0, Sugar1, Tray2).']}"
"Sprinkle powdered sugar over a couple trays","{'type':'command','expressions':[['|exists x1 (powderedSugar(x1)).| >= 1','|exists x2 (bakingTray(x2)).| >= 2']],'commands':['robot(x0) & powderedSugar(x1) & bakingTray(x2) -> sprinkle(x0, x1, x2).']}"
"Sprinkle powdered sugar over a tray","{'type':'command','expressions':[['|exists x1 (powderedSugar(x1)).| >= 1','|exists x2 (bakingTray(x2)).| >= 1']],'commands':['robot(x0) & powderedSugar(x1) & bakingTray(x2) -> sprinkle(x0, x1, x2).']}"
"Mold Bowl1 into clumps and everything into a baking tray","{'type':'command','expressions':[['|exists x2 (bakingTray(x2)).| >= 1']],'commands':['robot(x0) & bakingTray(x2) -> shape(x0, Bowl1, x2).']}"
"Shape baking tray Tray1 into clumps and place them into a small bowl","{'type':'command','expressions':[['|exists x2 (smallBowl(x2)).| >= 1']],'commands':['robot(x0) & bakingTray(Tray1) & smallBowl(x2) -> shape(x0, Tray1, x2).']}"
"Shape bowl1 and put it in tray1","{'type':'command','expressions':[[]],'commands':['robot(x0) -> shape(x0, Bowl1, Tray1).']}"
"Shape Bowl12 and Bowl23 and put the results in LargeTray1","{'type':'command','expressions':[[],[]],'commands':['robot(x0) -> shape(x0, Bowl12, LargeTray1).','robot(x0) -> shape(x0, Bowl23, LargeTray1).']}"
"not most bowls are small bowls","{'type':'query','expressions':['|exists x0 (bowl(x0) & smallBowl(x0)).| < |exists x0 (bowl(x0) & -smallBowl(x0)).|']}"
"Most bowls are small bowls","{'type':'query','expressions':['|exists x0 (bowl(x0) & smallBowl(x0)).| > |exists x0 (bowl(x0) & -smallBowl(x0)).|']}"
"Majority of onions are brown onions in the kitchen","{'type':'query','expressions':['|exists x0 (onion(x0) & brownOnion(x0)).| > |exists x0 (onion(x0) & -brownOnion(x0)).|']}"
"At least half of the fruits are mangoes","{'type':'query','expressions':['|exists x0 (fruit(x0) & mango(x0)).| >= |exists x0 (fruit(x0) & -mango(x0)).|']}"
"There are twice as many avocados than mangoes","{'type':'query','expressions':['|exists x0 (avocado(x0)).| == 2 * |exists x0 (mango(x0)).|']}"
"at least 20 baking sheets","{'type':'query','expressions':['|exists x0 (bakingSheet(x0)).| >= 20']}"
"There are at most 13 peeled red onions","{'type':'query','expressions':['|exists x0 (peeledRedOnion(x0)).| <= 13']}"
"there are more apples than potatoes and carrots combined","{'type':'query','expressions':['|exists x0 (apple(x0)).| > |exists x0 (potato(x0)).| + |exists x0 (carrot(x0)).|']}"
"More cooking knives than whisks","{'type':'query','expressions':['|exists x0 (cookingKnife(x0)).| > |exists x0 (whisk(x0)).|']}"
"There are less vegetables than fruits","{'type':'query','expressions':['|exists x0 (vegetable(x0)).| < |exists x0 (fruit(x0)).|']}"
"There are many ovens","{'type':'query','expressions':['|exists x0 (oven(x0)).| >= 10']}"
"there are a lot of green peppers in the kitchen","{'type':'query','expressions':['|exists x0 (greenPepper(x0)).| >= 10']}"
"There are exactly ten onions","{'type':'query','expressions':['|exists x0 (onion(x0)).| == 10']}"
"There are only 12 baking sheets","{'type':'query','expressions':['|exists x0 (bakingSheet(x0)).| == 12']}"
"There are 9 bowls","{'type':'query','expressions':['|exists x0 (bowl(x0)).| >= 9']}"
"There are several apples","{'type':'query','expressions':['|exists x0 (apple(x0)).| >= 5']}"
"only a few kitchen trays","{'type':'query','expressions':['|exists x0 (kitchenTray(x0)).| <= 3']}"
"a few avocados in the kitchen","{'type':'query','expressions':['|exists x0 (avocado(x0)).| >= 3']}"
"there are a couple of carrots","{'type':'query','expressions':['|exists x0 (carrot(x0)).| >= 2']}"
"There are some broccoli stems","{'type':'query','expressions':['|exists x0 (broccoliStem(x0)).| >= 4']}"
"Five times more apples than oranges","{'type':'query','expressions':['|exists x0 (apple(x0)).| == 5 * |exists x0 (orange(x0)).|']}"
"The number of large bowls is half the number of bowls","{'type':'query','expressions':['|exists x0 (largeBowl(x0)).| == |exists x0 (bowl(x0)).| / 2']}"
"There are less than a dozen eggs","{'type':'query','expressions':['|exists x0 (egg(x0)).| < 12']}"
"there should be half a dozen potato","{'type':'query','expressions':['|exists x0 (potato(x0)).| >= 6']}"
"how many kitchen counters are there?","{'type':'query','expressions':['|exists x0 (kitchenCounter(x0)).|']}"
"count cutting tools","{'type':'query','expressions':['|exists x0 (cuttingTool(x0)).|']}"
"in the kitchen there is no fridge","{'type':'query','expressions':['|exists x0 (fridge(x0)).| == 0']}"
"every pepper is a green pepper","{'type':'query','expressions':['all x0 (pepper(x0) -> greenPepper(x0)).']}"
"All peppers are not red chili peppers","{'type':'query','expressions':['all x0 (pepper(x0) -> -redChiliPepper(x0)).']}"
"No vegetable is broccoli","{'type':'query','expressions':['|exists x0 (vegetable(x0) & broccoli(x0)).| == 0']}"
"not every bowl is a large bowl","{'type':'query','expressions':['exists x0 (bowl(x0) & -largeBowl(x0)).' >= 1]}"
"There are between one and eleven red onions","{'type':'query','expressions':['1 <= |exists x0 (redOnion(x0)).| <= 11']}"
"Shape","{'type':'invalid'}"
"Mix something","{'type':'invalid'}"
"I enjoy listening to music","{'type':'invalid'}"
"Transfer 0 trays to 0 bowls","{'type':'invalid'}"
"Sprinkle something","{'type':'invalid'}"
"Robot, fly over the table","{'type':'invalid'}"
"I need assistance","{'type':'invalid'}"
"Sprinkle","{'type':'invalid'}"
"Run to the door","{'type':'invalid'}"
"Mix","{'type':'invalid'}"
"Fetch please","{'type':'invalid'}"
"This is not a command","{'type':'invalid'}"
"Do you wanna know?","{'type':'invalid'}"
"I want to visit USA","{'type':'invalid'}"
"Transfer it to that","{'type':'invalid'}"
"Fetch that","{'type':'invalid'}"
"Shape one","{'type':'invalid'}"
"Nothing else matters","{'type':'invalid'}"
"Play the guitar","{'type':'invalid'}"
"Wait outside","{'type':'invalid'}"