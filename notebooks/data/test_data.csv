"prompt","completion"
"Fetch 1 ingredient","{'type':'command','expressions':[['|exists x1 (ingredient(x1)).| >= 1']],'commands':['robot(x0) & ingredient(x1) -> fetch(x0, x1).']}"
"Get 9 vegetables","{'type':'command','expressions':[['|exists x1 (vegetable(x1)).| >= 9']],'commands':['robot(x0) & vegetable(x1) -> fetch(x0, x1).']}"
"Fetch 4 broccoli stems","{'type':'command','expressions':[['|exists x1 (broccoliStem(x1)).| >= 4']],'commands':['robot(x0) & broccoliStem(x1) -> fetch(x0, x1).']}"
"Bring me exactly 12 eggs","{'type':'command','expressions':[['|exists x1 (egg(x1)).| >= 12']],'commands':['robot(x0) & egg(x1) -> fetch(x0, x1).']}"
"Fetch at least ten plumbs","{'type':'command','expressions':[['|exists x1 (plumb(x1)).| >= 10']],'commands':['robot(x0) & plumb(x1) -> fetch(x0, x1).']}"
"GET A FEW RED POTATOES FOR ME, PLEASE!","{'type':'command','expressions':[['|exists x1 (redPotato(x1)).| >= 3']],'commands':['robot(x0) & redPotato(x1) -> fetch(x0, x1).']}"
"Fetch several cookies","{'type':'command','expressions':[['|exists x1 (cookie(x1)).| >= 5']],'commands':['robot(x0) & cookie(x1) -> fetch(x0, x1).']}"
"Get many biscuits","{'type':'command','expressions':[['|exists x1 (biscuit(x1)).| >= 10']],'commands':['robot(x0) & biscuit(x1) -> fetch(x0, x1).']}"
"Get some baking sheets, por favor!","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 4']],'commands':['robot(x0) & bakingSheet(x1) -> fetch(x0, x1).']}"
"Fetch a couple of vegetables","{'type':'command','expressions':[['|exists x1 (vegetable(x1)).| >= 2']],'commands':['robot(x0) & vegetable(x1) -> fetch(x0, x1).']}"
"Put one small bowl on the counter","{'type':'command','expressions':[['|exists x1 (smallBowl(x1)).| >= 1']],'commands':['robot(x0) & smallBowl(x1) -> fetch(x0, x1).']}"
"Get RedPeeledOnion1 and Knife1","{'type':'command','expressions':[[],[]],'commands':['robot(x0) -> fetch(x0, RedPeeledOnion1).','robot(x0) -> fetch(x0, Knife1).']}"
"Bring SugarBag2, Cookie2","{'type':'command','expressions':[[],[]],'commands':['robot(x0) -> fetch(x0, SugarBag2).','robot(x0) -> fetch(x0, Cookie2).']}"
"Dear robot, can you get 13 apples?","{'type':'command','expressions':[['|exists x1 (apple(x1)).| >= 13']],'commands':['robot(x0) & apple(x1) -> fetch(x0, x1).']}"
"Fetch pepper GreenPepper3","{'type':'command','expressions':[[]],'commands':['robot(x0) & pepper(GreenPepper3) -> fetch(x0, GreenPepper3).']}"
"Fetch Onion21","{'type':'command','expressions':[[]],'commands':['robot(x0) -> fetch(x0, Onion21).']}"
"Fetch all potatoes","{'type':'command','expressions':[['|exists x1 (potato(x1)).|']],'commands':['robot(x0) & potato(x1) -> fetch(x0, x1).']}"
"Please get half of the ingredients","{'type':'command','expressions':[['|exists x1 (ingredient(x1)).| / 2']],'commands':['robot(x0) & ingredient(x1) -> fetch(x0, x1).']}"
"get a dozen ingredients","{'type':'command','expressions':[['|exists x1 (ingredient(x1)).| >= 12']],'commands':['robot(x0) & ingredient(x1) -> fetch(x0, x1).']}"
"bake BakingTray10 in the oven","{'type':'command','expressions':[['|exists x2 (oven(x2)).| >= 1']],'commands':['robot(x0) & oven(x2) & kitchenCounter(x3) -> bake(x0, BakingTray10, x2, x3).']}"
"Bake Tray11 in Oven11","{'type':'command','expressions':[[]],'commands':['robot(x0) & kitchenCounter(x3) -> bake(x0, Tray11, Oven11, x3).']}"
"Please bake small bowl SmallBowl1 in Oven1","{'type':'command','expressions':[[]],'commands':['robot(x0) & smallBowl(SmallBowl1) & kitchenCounter(x3) -> bake(x0, SmallBowl1, Oven1, x3).']}"
"Could you cook baking tray Tray10?","{'type':'command','expressions':[[]],'commands':['robot(x0) & bakingTray(Tray10) & oven(x2) & kitchenCounter(x3) -> bake(x0, Tray10, x2, x3).']}"
"Cook BakingTray2","{'type':'command','expressions':[[]],'commands':['robot(x0) & oven(x2) & kitchenCounter(x3) -> bake(x0, BakingTray2, x2, x3).']}"
"bake tray Tray19","{'type':'command','expressions':[[]],'commands':['robot(x0) & bakingTray(Tray19) & oven(x2) & kitchenCounter(x3) -> bake(x0, Tray19, x2, x3).']}"
"Bake BakingTray1 and afterwards BakingTray2","{'type':'command','expressions':[[],[]],'commands':['robot(x0) & oven(x2) & kitchenCounter(x3) -> bake(x0, BakingTray1, x2, x3).','robot(x0) & oven(x2) & kitchenCounter(x3) -> bake(x0, BakingTray2, x2, x3).']}"
"COOK Bowl1 IN Oven2 and Bowl2 in Oven1. Thanks","{'type':'command','expressions':[[],[]],'commands':['robot(x0) & kitchenCounter(x3) -> bake(x0, Bowl1, Oven2, x3).','robot(x0) & kitchenCounter(x3) -> bake(x0, Bowl2, Oven1, x3).']}"
"Bake smallBowl2, bakingTray22","{'type':'command','expressions':[[],[]],'commands':['robot(x0) & oven(x2) & kitchenCounter(x3) -> bake(x0, SmallBowl2, x2, x3).','robot(x0) & oven(x2) & kitchenCounter(x3) -> bake(x0, BakingTray22, x2, x3).']}"
"Bake 7 trays","{'type':'command','expressions':[['|exists x1 (bakingTray(x1)).| >= 7']],'commands':['robot(x0) & bakingTray(x1) & oven(x2) & kitchenCounter(x3) -> bake(x0, x1, x2, x3).']}"
"cook some bowls","{'type':'command','expressions':[['|exists x1 (bowl(x1)).| >= 4']],'commands':['robot(x0) & bowl(x1) & oven(x2) & kitchenCounter(x3) -> bake(x0, x1, x2, x3).']}"
"next, cook bowl LargeBowl6 in Oven22","{'type':'command','expressions':[[]],'commands':['robot(x0) & bowl(LargeBowl6) & oven(Oven22) & kitchenCounter(x3) -> bake(x0, LargeBowl6, Oven22, x3).']}"
"Cut several broccoli stems","{'type':'command','expressions':[['|exists x1 (broccoliStem(x1)).| >= 5']],'commands':['robot(x0) & broccoliStem(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"Chope 3 onions with a knife","{'type':'command','expressions':[['|exists x1 (onion(x1)).| >= 3','|exists x2 (cookingKnife(x2)).| >= 1']],'commands':['robot(x0) & onion(x1) & cookingKnife(x2) -> cut(x0, x1, x2).']}"
"chope some apples with a knife","{'type':'command','expressions':[['|exists x1 (apple(x1)).| >= 4','|exists x2 (cookingKnife(x2)).| >= 1']],'commands':['robot(x0) & apple(x1) & cookingKnife(x2) -> cut(x0, x1, x2).']}"
"Slice Onion3","{'type':'command','expressions':[[]],'commands':['robot(x0) & cuttingTool(x2) -> cut(x0, Onion3, x2).']}"
"Cut Onion12 and then Onion21","{'type':'command','expressions':[[],[]],'commands':['robot(x0) & cuttingTool(x2) -> cut(x0, Onion12, x2).','robot(x0) & cuttingTool(x2) -> cut(x0, Onion21, x2).']}"
"Cut all carrots you can find","{'type':'command','expressions':[['|exists x1 (carrot(x1)).|']],'commands':['robot(x0) & carrot(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"Slice six carrots","{'type':'command','expressions':[['|exists x1 (carrot(x1)).| >= 6']],'commands':['robot(x0) & carrot(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"Chope a few peppers","{'type':'command','expressions':[['|exists x1 (pepper(x1)).| >= 3']],'commands':['robot(x0) & pepper(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"cut several mangoes with any knife","{'type':'command','expressions':[['|exists x1 (mango(x1)).| >= 5','|exists x2 (cookingKnife(x2)).| >= 1']],'commands':['robot(x0) & mango(x1) & cookingKnife(x2) -> cut(x0, x1, x2).']}"
"Cut onion BrownOnion3","{'type':'command','expressions':[[]],'commands':['robot(x0) & onion(BrownOnion3) & cuttingTool(x2) -> cut(x0, BrownOnion3, x2).']}"
"slice banana1 via cookingKnife2","{'type':'command','expressions':[[]],'commands':['robot(x0) -> cut(x0, Banana1, CookingKnife2).']}"
"slice half of the number of onions","{'type':'command','expressions':[['|exists x1 (onion(x1)).| / 2']],'commands':['robot(x0) & onion(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"Line a baking tray with a sheet","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 1','|exists x2 (bakingTray(x2)).| >= 1']],'commands':['robot(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Line Tray2 with BakingSheet2","{'type':'command','expressions':[[]],'commands':['robot(x0) -> line(x0, BakingSheet2, Tray2).']}"
"Cover at least 5 trays with paper","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 5','|exists x2 (bakingTray(x2)).| >= 5']],'commands':['robot(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Using Sheet22, please cover baking tray Tray22","{'type':'command','expressions':[[]],'commands':['robot(x0) & bakingTray(Tray22) -> line(x0, Sheet22, Tray22).']}"
"Cover all baking trays that are in the kitchen","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).|','|exists x2 (bakingTray(x2)).|']],'commands':['robot(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Line several trays","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 5','|exists x2 (bakingTray(x2)).| >= 5']],'commands':['robot(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Cover bakingTray6 with any baking sheet","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 1']],'commands':['robot(x0) & bakingSheet(x1) -> line(x0, x1, BakingTray6).']}"
"Line tray Tray1 with baking paper","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 1']],'commands':['robot(x0) & bakingSheet(x1) & bakingTray(Tray1) -> line(x0, x1, Tray1).']}"
"Line bakingTray12 with sheet sheet2","{'type':'command','expressions':[[]],'commands':['robot(x0) & bakingSheet(Sheet2) -> line(x0, Sheet2, BakingTray12).']}"
"Line Tray1 with Sheet12, Tray2 with Sheet21","{'type':'command','expressions':[[],[]],'commands':['robot(x0) -> line(x0, Sheet12, Tray1).','robot(x0) -> line(x0, Sheet21, Tray2).']}"
"Line Tray121","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 1']],'commands':['robot(x0) & bakingSheet(x1) -> line(x0, x1, Tray121).']}"
"Line a lot of baking trays","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 10','|exists x2 (bakingTray(x2)).| >= 10']],'commands':['robot(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Mix the bowl","{'type':'command','expressions':[['|exists x1 (bowl(x1)).| >= 1']],'commands':['robot(x0) & bowl(x1) & whisk(x2) -> mix(x0, x1, x2).']}"
"Mix SmallBowl1 with whisk Whisk1","{'type':'command','expressions':[[]],'commands':['robot(x0) & whisk(Whisk1) -> mix(x0, SmallBowl1, Whisk1).']}"
"blend bowl2 with a whisk","{'type':'command','expressions':[['|exists x2 (whisk(x2)).| >= 1']],'commands':['robot(x0) & whisk(x2) -> mix(x0, Bowl2, x2).']}"
"mix bowl4","{'type':'command','expressions':[[]],'commands':['robot(x0) & whisk(x2) -> mix(x0, Bowl4, x2).']}"
"Blend smallBowl1 and smallBowl2","{'type':'command','expressions':[[],[]],'commands':['robot(x0) & whisk(x2) -> mix(x0, SmallBowl1, x2).','robot(x0) & whisk(x2) -> mix(x0, SmallBowl2, x2).']}"
"Mix small bowls bowl2 and bowl3","{'type':'command','expressions':[[],[]],'commands':['robot(x0) & smallBowl(Bowl2) & whisk(x2) -> mix(x0, Bowl2, x2).','robot(x0) & smallBowl(Bowl3) & whisk(x2) -> mix(x0, Bowl3, x2).']}"
"Mix ALL medium bowls","{'type':'command','expressions':[['|exists x1 (mediumBowl(x1)).|']],'commands':['robot(x0) & mediumBowl(x1) & whisk(x2) -> mix(x0, x1, x2).']}"
"Blend contents of SmallBowl2 with Whisk11","{'type':'command','expressions':[[]],'commands':['robot(x0) -> mix(x0, SmallBowl2, Whisk11).']}"
"Mix SmallBowl2 and MediumBowl2","{'type':'command','expressions':[[],[]],'commands':['robot(x0) & whisk(x2) -> mix(x0, SmallBowl2, x2).','robot(x0) & whisk(x2) -> mix(x0, MediumBowl2, x2).']}"
"Transfer tray3 to Tray7","{'type':'command','expressions':[[]],'commands':['robot(x0) -> transfer(x0, Tray3, Tray7).']}"
"Move everything from SmallBowl2 and LargeBowl4 to MediumBowl12","{'type':'command','expressions':[[],[]],'commands':['robot(x0) -> transfer(x0, SmallBowl2, MediumBowl12).','robot(x0) -> transfer(x0, LargeBowl4, MediumBowl12).']}"
"Transfer B1 to a container","{'type':'command','expressions':[['|exists x2 (container(x2)).| >= 1']],'commands':['robot(x0) & container(x2) -> transfer(x0, B1, x2).']}"
"Shift Bowl3 to Bowl9 pretty please","{'type':'command','expressions':[[]],'commands':['robot(x0) -> transfer(x0, Bowl3, Bowl9).']}"
"Move contents from smallBowl3 to a medium bowl","{'type':'command','expressions':[['|exists x2 (mediumBowl(x2)).| >= 1']],'commands':['robot(x0) & mediumBowl(x2) -> transfer(x0, SmallBowl3, x2).']}"
"Transfer baking tray tray1 to baking tray tray2","{'type':'command','expressions':[[]],'commands':['robot(x0) & bakingTray(Tray1) & bakingTray(Tray2) -> transfer(x0, Tray1, Tray2).']}"
"Sprinkle powdered sugar over MediumBowl6","{'type':'command','expressions':[['|exists x1 (powderedSugar(x1)).| >= 1']],'commands':['robot(x0) & powderedSugar(x1) -> sprinkle(x0, x1, MediumBowl6).']}"
"Sprinkle powdered sugar Sugar1 over Bowl1","{'type':'command','expressions':[[]],'commands':['robot(x0) & powderedSugar(Sugar1) -> sprinkle(x0, Sugar1, Bowl1).']}"
"Dust SugarBag1 over trays Tray12 and Tray13","{'type':'command','expressions':[[],[]],'commands':['robot(x0) & bakingTray(Tray12) -> sprinkle(x0, SugarBag1, Tray12).','robot(x0) & bakingTray(Tray13) -> sprinkle(x0, SugarBag1, Tray13).']}"
"Sprinkle particles from PowderedSugar21 over BakingTray21","{'type':'command','expressions':[[]],'commands':['robot(x0) -> sprinkle(x0, PowderedSugar21, BakingTray21).']}"
"Sprinkle the contents of PowderedSugar11 over baking tray BakingTray10","{'type':'command','expressions':[[]],'commands':['robot(x0) & bakingTray(BakingTray10) -> sprinkle(x0, PowderedSugar11, BakingTray10).']}"
"Dust powdered sugar over this baking tray","{'type':'command','expressions':[['|exists x1 (powderedSugar(x1)).| >= 1','|exists x2 (bakingTray(x2)).| >= 1']],'commands':['robot(x0) & powderedSugar(x1) & bakingTray(x2) -> sprinkle(x0, x1, x2).']}"
"Shape SmallBowl11 into clumps and place them into another bowl","{'type':'command','expressions':[['|exists x2 (bowl(x2)).| >= 1']],'commands':['robot(x0) & bowl(x2) -> shape(x0, SmallBowl11, x2).']}"
"shape LargeBowl21 and put the results in a container","{'type':'command','expressions':[['|exists x2 (container(x2)).| >= 1']],'commands':['robot(x0) & container(x2) -> shape(x0, LargeBowl21, x2).']}"
"Shape bowl1 and put it in tray1","{'type':'command','expressions':[[]],'commands':['robot(x0) -> shape(x0, Bowl1, Tray1).']}"
"Mold mediumBowl1 and smallBowl3 and put everything in tray23","{'type':'command','expressions':[[],[]],'commands':['robot(x0) -> shape(x0, MediumBowl1, Tray23).','robot(x0) -> shape(x0, SmallBowl3, Tray23).']}"
"Most red peppers are red chili peppers","{'type':'query','expressions':['|exists x0 (redPepper(x0) & redChiliPepper(x0)).| > |exists x0 (redPepper(x0) & -redChiliPepper(x0)).|']}"
"The majority of kitchen units are kitchen cabinets","{'type':'query','expressions':['|exists x0 (kitchenUnit(x0) & kitchenCabinet(x0)).| > |exists x0 (kitchenUnit(x0) & -kitchenCabinet(x0)).|']}"
"most containers are bowls","{'type':'query','expressions':['|exists x0 (container(x0) & bowl(x0)).| > |exists x0 (container(x0) & -bowl(x0)).|']}"
"More avocados than mangoes","{'type':'query','expressions':['|exists x0 (avocado(x0)).| > |exists x0 (mango(x0)).|']}"
"there are more berries than apples and pears combined","{'type':'query','expressions':['|exists x0 (berry(x0)).| > |exists x0 (apple(x0)).| + |exists x0 (pear(x0)).|']}"
"there are more plumbs than baking trays","{'type':'query','expressions':['|exists x0 (plumb(x0)).| > |exists x0 (bakingTray(x0)).|']}"
"less kitchen units than kitchen tools","{'type':'query','expressions':['|exists x0 (kitchenUnit(x0)).| < |exists x0 (kitchenTool(x0)).|']}"
"There are less than 18 tomatoes","{'type':'query','expressions':['|exists x0 (tomato(x0)).| < 18']}"
"there are at most 2 baking trays in the kitchen","{'type':'query','expressions':['|exists x0 (bakingTray(x0)).| <= 2']}"
"I hope there are at least nine red peeled onions","{'type':'query','expressions':['|exists x0 (redPeeledOnion(x0)).| >= 9']}"
"there are exactly a dozen eggs in the kitchen","{'type':'query','expressions':['|exists x0 (egg(x0)).| == 12']}"
"There are exactly twenty potatoes","{'type':'query','expressions':['|exists x0 (potato(x0)).| == 20']}"
"4 peppers in the kitchen","{'type':'query','expressions':['|exists x0 (pepper(x0)).| >= 4']}"
"There are 14 peppers","{'type':'query','expressions':['|exists x0 (pepper(x0)).| >= 14']}"
"there are 5 times more small bowls than large bowls","{'type':'query','expressions':['|exists x0 (smallBowl(x0)).| == 5 * |exists x0 (largeBowl(x0)).|']}"
"in this kitchen there are between 2 and 14 bananas in the kitchen","{'type':'query','expressions':['2 <= |exists x0 (banana(x0)).| <= 14']}"
"There are many green peppers","{'type':'query','expressions':['|exists x0 (greenPepper(x0)).| >= 10']}"
"There are few brown onions","{'type':'query','expressions':['|exists x0 (brownOnion(x0)).| <= 3']}"
"There are several cutting tools","{'type':'query','expressions':['|exists x0 (cuttingTool(x0)).| >= 5']}"
"A few baking sheets","{'type':'query','expressions':['|exists x0 (bakingSheet(x0)).| >= 3']}"
"There are a couple of large bowls","{'type':'query','expressions':['|exists x0 (largeBowl(x0)).| >= 2']}"
"Are there some ingredients?","{'type':'query','expressions':['|exists x0 (ingredient(x0)).| >= 4']}"
"How many red peppers?","{'type':'query','expressions':['|exists x0 (redPepper(x0)).|']}"
"tell me how many onions are in the kitchen","{'type':'query','expressions':['|exists x0 (onion(x0)).|']}"
"The number of carrots is half the number of vegetables","{'type':'query','expressions':['|exists x0 (carrot(x0)).| == |exists x0 (vegetable(x0)).| / 2']}"
"No carrots present in the kitchen","{'type':'query','expressions':['|exists x0 (carrot(x0)).| == 0']}"
"Not every kitchen unit is a kitchen cabinet","{'type':'query','expressions':['exists x0 (kitchenUnit(x0) & -kitchenCabinet(x0)).' >= 1]}"
"All bowls are not large bowls","{'type':'query','expressions':['all x0 (bowl(x0) -> -largeBowl(x0)).']}"
"every fruit is a melon","{'type':'query','expressions':['all x0 (fruit(x0) -> melon(x0)).']}"
"there are half a dozen carrots","{'type':'query','expressions':['|exists x0 (carrot(x0)).| >= 6']}"
"there are exactly half a dozen carrots","{'type':'query','expressions':['|exists x0 (carrot(x0)).| == 6']}"
"The number of plumbs is less than half the number of potatoes","{'type':'query','expressions':['|exists x0 (plumb(x0)).| < |exists x0 (potato(x0)).| / 2']}"
"What is the meaning of life?","{'type':'invalid'}"
"Do nothing","{'type':'invalid'}"
"Please sing my favourite song","{'type':'invalid'}"
"Find my cat. I don't know where she is","{'type':'invalid'}"
"Transfer","{'type':'invalid'}"
"Cook something","{'type':'invalid'}"
"Kitchen counter","{'type':'invalid'}"
"Fine tune a model","{'type':'invalid'}"
"Drive my car","{'type':'invalid'}"
"Cut it","{'type':'invalid'}"
"I don't know what I want","{'type':'invalid'}"
"I should have stayed at home","{'type':'invalid'}"
"fetch what I need","{'type':'invalid'}"
"sprinkle that thing","{'type':'invalid'}"
"Alexa, play my favourite song","{'type':'invalid'}"
"This is another sentence","{'type':'invalid'}"
"NLU is fun","{'type':'invalid'}"
"Line please you know what","{'type':'invalid'}"
"...","{'type':'invalid'}"
"Catch that fly","{'type':'invalid'}"