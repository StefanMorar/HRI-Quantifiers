"prompt","completion"
"Fetch onion","{'type':'command','expressions':[['|exists x1 (onion(x1)).| >= 1']],'commands':['abe(x0) & onion(x1) -> fetch(x0, x1).']}"
"Fetch a carrot","{'type':'command','expressions':[['|exists x1 (carrot(x1)).| >= 1']],'commands':['abe(x0) & carrot(x1) -> fetch(x0, x1).']}"
"Fetch 2 avocados","{'type':'command','expressions':[['|exists x1 (avocado(x1)).| >= 2']],'commands':['abe(x0) & avocado(x1) -> fetch(x0, x1).']}"
"Please fetch ten tomatoes","{'type':'command','expressions':[['|exists x1 (tomato(x1)).| >= 10']],'commands':['abe(x0) & tomato(x1) -> fetch(x0, x1).']}"
"Bring a cookie on the kitchen counter","{'type':'command','expressions':[['|exists x1 (cookie(x1)).| >= 1']],'commands':['abe(x0) & cookie(x1) -> fetch(x0, x1).']}"
"Hello, fetch some potatoes","{'type':'command','expressions':[['|exists x1 (potato(x1)).| >= 4']],'commands':['abe(x0) & potato(x1) -> fetch(x0, x1).']}"
"Fetch many bananas","{'type':'command','expressions':[['|exists x1 (banana(x1)).| >= 10']],'commands':['abe(x0) & banana(x1) -> fetch(x0, x1).']}"
"Get three carrots","{'type':'command','expressions':[['|exists x1 (carrot(x1)).| >= 3']],'commands':['abe(x0) & carrot(x1) -> fetch(x0, x1).']}"
"Fetch 7 bread slices","{'type':'command','expressions':[['|exists x1 (breadSlice(x1)).| >= 7']],'commands':['abe(x0) & breadSlice(x1) -> fetch(x0, x1).']}"
"Fetch a broccoli stem","{'type':'command','expressions':[['|exists x1 (broccoliStem(x1)).| >= 1']],'commands':['abe(x0) & broccoliStem(x1) -> fetch(x0, x1).']}"
"Get a few red onions","{'type':'command','expressions':[['|exists x1 (redOnion(x1)).| >= 3']],'commands':['abe(x0) & redOnion(x1) -> fetch(x0, x1).']}"
"Get a half a dozen eggs","{'type':'command','expressions':[['|exists x1 (egg(x1)).| >= 6']],'commands':['abe(x0) & egg(x1) -> fetch(x0, x1).']}"
"Could you fetch a dozen eggs please?","{'type':'command','expressions':[['|exists x1 (egg(x1)).| >= 12']],'commands':['abe(x0) & egg(x1) -> fetch(x0, x1).']}"
"Fetch Onion1","{'type':'command','expressions':[[]],'commands':['abe(x0) -> fetch(x0, Onion1).']}"
"Fetch a couple of red chilli peppers","{'type':'command','expressions':[['|exists x1 (redChilliPepper(x1)).| >= 2']],'commands':['abe(x0) & redChilliPepper(x1) -> fetch(x0, x1).']}"
"Fetch all onions","{'type':'command','expressions':[['|exists x1 (onion(x1)).|']],'commands':['abe(x0) & onion(x1) -> fetch(x0, x1).']}"
"Fetch every red onion you see","{'type':'command','expressions':[['|exists x1 (redOnion(x1)).|']],'commands':['abe(x0) & onion(x1) -> fetch(x0, x1).']}"
"Bake the baking tray","{'type':'command','expressions':[['|exists x1 (bakingTray(x1)).| >= 1']],'commands':['abe(x0) & bakingTray(x1) & oven(x2) & kitchenCounter(x3) -> bake(x0, x1, x2, x3).']}"
"Please bake a baking tray in an oven","{'type':'command','expressions':[['|exists x1 (bakingTray(x1)).| >= 1','|exists x2 (oven(x2)).| >= 1']],'commands':['abe(x0) & bakingTray(x1) & oven(x2) & kitchenCounter(x3) -> bake(x0, x1, x2, x3).']}"
"Please cook a tray in an oven placing it afterwards on a kitchen counter","{'type':'command','expressions':[['|exists x1 (bakingTray(x1)).| >= 1','|exists x2 (oven(x2)).| >= 1','|exists x3 (kitchenCounter(x3)).| >= 1']],'commands':['abe(x0) & bakingTray(x1) & oven(x2) & kitchenCounter(x3) -> bake(x0, x1, x2, x3).']}"
"Bake a baking tray in Oven1","{'type':'command','expressions':[['|exists x1 (bakingTray(x1)).| >= 1']],'commands':['abe(x0) & bakingTray(x1) & kitchenCounter(x3) -> bake(x0, x1, Oven1, x3).']}"
"Bake Tray1 in Oven1","{'type':'command','expressions':[[]],'commands':['abe(x0) & kitchenCounter(x3) -> bake(x0, Tray1, Oven1, x3).']}"
"Cook baking tray Tray1 in oven Oven1","{'type':'command','expressions':[[]],'commands':['abe(x0) & bakingTray(Tray1) & oven(Oven1) & kitchenCounter(x3) -> bake(x0, Tray1, Oven1, x3).']}"
"Now bake baking tray Tray1 in Oven1","{'type':'command','expressions':[[]],'commands':['abe(x0) & bakingTray(Tray1) & kitchenCounter(x3) -> bake(x0, Tray1, Oven1, x3).']}"
"Could you bake baking tray Tray1, please?","{'type':'command','expressions':[[]],'commands':['abe(x0) & bakingTray(Tray1) & oven(x2) & kitchenCounter(x3) -> bake(x0, Tray1, x2, x3).']}"
"Bake baking tray Tray1 in an oven","{'type':'command','expressions':[['|exists x2 (oven(x2)).| >= 1']],'commands':['abe(x0) & bakingTray(Tray1) & oven(x2) & kitchenCounter(x3) -> bake(x0, Tray1, x2, x3).']}"
"Bake a large bowl","{'type':'command','expressions':[['|exists x1 (largeBowl(x1)).| >= 1']],'commands':['abe(x0) & largeBowl(x1) & oven(x2) & kitchenCounter(x3) -> bake(x0, x1, x2, x3).']}"
"Put the large bowl in the oven","{'type':'command','expressions':[['|exists x1 (largeBowl(x1)).| >= 1']],'commands':['abe(x0) & largeBowl(x1) & oven(x2) & kitchenCounter(x3) -> bake(x0, x1, x2, x3).']}"
"Bake 4 baking trays","{'type':'command','expressions':[['|exists x1 (bakingTray(x1)).| >= 4']],'commands':['abe(x0) & bakingTray(x1) & oven(x2) & kitchenCounter(x3) -> bake(x0, x1, x2, x3).']}"
"Cut an onion","{'type':'command','expressions':[['|exists x1 (onion(x1)).| >= 1']],'commands':['abe(x0) & onion(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"Chope half a dozen onions","{'type':'command','expressions':[['|exists x1 (onion(x1)).| >= 6']],'commands':['abe(x0) & onion(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"Please go and cut some onions","{'type':'command','expressions':[['|exists x1 (onion(x1)).| >= 4']],'commands':['abe(x0) & onion(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"Cut several broccoli","{'type':'command','expressions':[['|exists x1 (broccoli(x1)).| >= 3']],'commands':['abe(x0) & broccoli(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"Chope many apples","{'type':'command','expressions':[['|exists x1 (apple(x1)).| >= 10']],'commands':['abe(x0) & apple(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"Cut 5 red chili peppers with a cooking knife","{'type':'command','expressions':[['|exists x1 (redChiliPepper(x1)).| >= 5','|exists x2 (cookingKnife(x2)).| >= 1']],'commands':['abe(x0) & redChiliPepper(x1) & cookingKnife(x2) -> cut(x0, x1, x2).']}"
"Cut several bananas with a knife","{'type':'command','expressions':[['|exists x1 (banana(x1)).| >= 3','|exists x2 (cookingKnife(x2)).| >= 1']],'commands':['abe(x0) & banana(x1) & cookingKnife(x2) -> cut(x0, x1, x2).']}"
"Cut 2 breads with cookingKnife1","{'type':'command','expressions':[['|exists x1 (bread(x1)).| >= 2']],'commands':['abe(x0) & bread(x1) -> cut(x0, x1, CookingKnife1).']}"
"Hi again, now cut many tomatoes using CookingKnife1","{'type':'command','expressions':[['|exists x1 (tomato(x1)).| >= 10']],'commands':['abe(x0) & tomato(x1) -> cut(x0, x1, CookingKnife1).']}"
"Next cut 1 mango using cooking knife Knife1","{'type':'command','expressions':[['|exists x1 (mango(x1)).| >= 1']],'commands':['abe(x0) & mango(x1) & cookingKnife(Knife1) -> cut(x0, x1, Knife1).']}"
"Please cut brownOnion1 with cookingKnife1","{'type':'command','expressions':[[]],'commands':['abe(x0) -> cut(x0, BrownOnion1, CookingKnife1).']}"
"Slice some bananas with a knife","{'type':'command','expressions':[['|exists x1 (banana(x1)).| >= 4','|exists x2 (cookingKnife(x2)).| >= 1']],'commands':['abe(x0) & banana(x1) & cookingKnife(x2) -> cut(x0, x1, x2).']}"
"Slice brownOnion1 with cookingKnife1","{'type':'command','expressions':[[]],'commands':['abe(x0) -> cut(x0, BrownOnion1, CookingKnife1).']}"
"Cut Onion1","{'type':'command','expressions':[[]],'commands':['abe(x0) & cuttingTool(x2) -> cut(x0, Onion1, x2).']}"
"Cut all onions","{'type':'command','expressions':[['|exists x1 (onion(x1)).|']],'commands':['abe(x0) & onion(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"Cut a couple of onions","{'type':'command','expressions':[['|exists x1 (onion(x1)).| >= 2']],'commands':['abe(x0) & onion(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"Cut onion1 with any cutting tool","{'type':'command','expressions':[['|exists x2 (cuttingTool(x2)).| >= 1']],'commands':['abe(x0) & cuttingTool(x2) -> cut(x0, Onion1, x2).']}"
"Chope red onion Onion1","{'type':'command','expressions':[[]],'commands':['abe(x0) & redOnion(Onion1) & cuttingTool(x2) -> cut(x0, Onion1, x2).']}"
"Cut sixteen carrots","{'type':'command','expressions':[['|exists x1 (carrot(x1)).| >= 16']],'commands':['abe(x0) & carrot(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"Cut few green chili peppers","{'type':'command','expressions':[['|exists x1 (greenChiliPepper(x1)).| >= 2']],'commands':['abe(x0) & greenChiliPepper(x1) & cuttingTool(x2) -> cut(x0, x1, x2).']}"
"Use a knife to cut several green chili peppers","{'type':'command','expressions':[['|exists x1 (greenChiliPepper(x1)).| >= 3','|exists x2 (cookingKnife(x2)).| >= 1']],'commands':['abe(x0) & greenChiliPepper(x1) & cookingKnife(x2) -> cut(x0, x1, x2).']}"
"Line a baking sheet on a baking tray","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 1','|exists x2 (bakingTray(x2)).| >= 1']],'commands':['abe(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Line the baking tray","{'type':'command','expressions':[['|exists x2 (bakingTray(x2)).| >= 1']],'commands':['abe(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Line both baking trays","{'type':'command','expressions':[['|exists x2 (bakingTray(x2)).| >= 2']],'commands':['abe(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Line a baking tray with paper","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 1','|exists x2 (bakingTray(x2)).| >= 1']],'commands':['abe(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Line all trays","{'type':'command','expressions':[[|exists x2 (bakingTray(x2)).|']],'commands':['abe(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Line all baking trays","{'type':'command','expressions':[[|exists x2 (bakingTray(x2)).|']],'commands':['abe(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Line that baking tray","{'type':'command','expressions':[['|exists x2 (bakingTray(x2)).| >= 1']],'commands':['abe(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Line BakingTray1 with baking sheet","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 1']],'commands':['abe(x0) & bakingSheet(x1) -> line(x0, x1, BakingTray1).']}"
"Line tray Tray1 with baking paper","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 1']],'commands':['abe(x0) & bakingSheet(x1) & bakingTray(Tray1) -> line(x0, x1, Tray1).']}"
"Line tray BakingTray1 with paper","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 1']],'commands':['abe(x0) & bakingSheet(x1) & bakingTray(BakingTray1) -> line(x0, x1, BakingTray1).']}"
"Line several baking trays","{'type':'command','expressions':[['|exists x2 (bakingTray(x2)).| >= 3']],'commands':['abe(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Line some baking trays","{'type':'command','expressions':[['|exists x2 (bakingTray(x2)).| >= 4']],'commands':['abe(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Line a couple baking trays","{'type':'command','expressions':[['|exists x2 (bakingTray(x2)).| >= 2']],'commands':['abe(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Cover a backing tray with a backing sheet","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 1','|exists x2 (bakingTray(x2)).| >= 1']],'commands':['abe(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Cover a tray with a backing sheet","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 1','|exists x2 (bakingTray(x2)).| >= 1']],'commands':['abe(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Cover Tray2 with a backing sheet","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 1'],'commands':['abe(x0) & bakingSheet(x1) -> line(x0, x1, Tray2).']}"
"Cover 3 trays with paper","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 3','|exists x2 (bakingTray(x2)).| >= 3']],'commands':['abe(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Cover many trays with backing sheets","{'type':'command','expressions':[['|exists x1 (bakingSheet(x1)).| >= 10','|exists x2 (bakingTray(x2)).| >= 10']],'commands':['abe(x0) & bakingSheet(x1) & bakingTray(x2) -> line(x0, x1, x2).']}"
"Mix the contents of the bowl using a whisk","{'type':'command','expressions':[['|exists x1 (bowl(x1)).| >= 1','|exists x2 (whisk(x2)).| >= 1']],'commands':['abe(x0) & bowl(x1) & whisk(x2) -> mix(x0, x1, x2).']}"
"Blend the contents of the bowl using a whisk","{'type':'command','expressions':[['|exists x1 (bowl(x1)).| >= 1','|exists x2 (whisk(x2)).| >= 1']],'commands':['abe(x0) & bowl(x1) & whisk(x2) -> mix(x0, x1, x2).']}"
"Mix a large bowl","{'type':'command','expressions':[['|exists x1 (largeBowl(x1)).| >= 1']],'commands':['abe(x0) & largeBowl(x1) & whisk(x2) -> mix(x0, x1, x2).']}"
"Mix 2 large bowls","{'type':'command','expressions':[['|exists x1 (largeBowl(x1)).| >= 2']],'commands':['abe(x0) & largeBowl(x1) & whisk(x2) -> mix(x0, x1, x2).']}"
"Mix LargeBowl1","{'type':'command','expressions':[[]],'commands':['abe(x0) & whisk(x2) -> mix(x0, x1, LargeBowl1).']}"
"Mix bowl","{'type':'command','expressions':[['|exists x1 (bowl(x1)).| >= 1']],'commands':['abe(x0) & bowl(x1) & whisk(x2) -> mix(x0, x1, x2).']}"
"Mix all bowls","{'type':'command','expressions':[['|exists x1 (bowl(x1)).|']],'commands':['abe(x0) & bowl(x1) & whisk(x2) -> mix(x0, x1, x2).']}"
"Mix all bowls with a whisk","{'type':'command','expressions':[['|exists x1 (bowl(x1)).|,'|exists x2 (whisk(x2)).| >= 1']],'commands':['abe(x0) & bowl(x1) & whisk(x2) -> mix(x0, x1, x2).']}"
"Mix contents of LargeBowl1 with Whisk1","{'type':'command','expressions':[[]],'commands':['abe(x0) -> mix(x0, LargeBowl1, Whisk1).']}"
"Mix contents of LargeBowl1 with whisk Whisk1","{'type':'command','expressions':[[]],'commands':['abe(x0) & whisk(Whisk1) -> mix(x0, LargeBowl1, Whisk1).']}"
"Mix bowl LargeBowl1","{'type':'command','expressions':[[]],'commands':['abe(x0) & bowl(LargeBowl1) & whisk(x2) -> mix(x0, LargeBowl1, x2).']}"
"Blend bowl LargeBowl1","{'type':'command','expressions':[[]],'commands':['abe(x0) & bowl(LargeBowl1) & whisk(x2) -> mix(x0, LargeBowl1, x2).']}"
"Move contents of MediumBowl1 to MediumBowl2","{'type':'command','expressions':[[]],'commands':['abe(x0) -> transfer(x0, MediumBowl1, MediumBowl2).']}"
"Transfer contents of MediumBowl1 to MediumBowl2","{'type':'command','expressions':[[]],'commands':['abe(x0) -> transfer(x0, MediumBowl1, MediumBowl2).']}"
"Shift the contents of MediumBowl1 to MediumBowl2","{'type':'command','expressions':[[]],'commands':['abe(x0) -> transfer(x0, MediumBowl1, MediumBowl2).']}"
"Transfer contents of MediumBowl1 to another bowl","{'type':'command','expressions':[['|exists x2 (bowl(x2)).| >= 1']],'commands':['abe(x0) & bowl(x2) -> transfer(x0, MediumBowl1, MediumBowl2).']}"
"Transfer contents from mediumBowl1 to a large bowl","{'type':'command','expressions':[['|exists x2 (largeBowl(x2)).| >= 1']],'commands':['abe(x0) & largeBowl(x2) -> transfer(x0, MediumBowl1, MediumBowl2).']}"
"Transfer the contents of bowl Bowl1 to a medium bowl","{'type':'command','expressions':[['|exists x2 (mediumBowl(x2)).| >= 1']],'commands':['abe(x0) & bowl(Bowl1) & mediumBowl(x2) -> transfer(x0, Bowl1, x2).']}"
"Sprinkle powdered sugar over the baking tray","{'type':'command','expressions':[['|exists x1 (powderedSugar(x1)).| >= 1','|exists x2 (bakingTray(x2)).| >= 1']],'commands':['abe(x0) & powderedSugar(x1) & bakingTray(x2) -> sprinkle(x0, x1, x2).']}"
"Sprinkle powdered sugar over BakingTray1","{'type':'command','expressions':[['|exists x1 (powderedSugar(x1)).| >= 1']],'commands':['abe(x0) & powderedSugar(x1) -> sprinkle(x0, x1, BakingTray1).']}"
"Sprinkle powdered sugar over tray Tray1","{'type':'command','expressions':[['|exists x1 (powderedSugar(x1)).| >= 1']],'commands':['abe(x0) & powderedSugar(x1) & bakingTray(Tray1) -> sprinkle(x0, x1, Tray1).']}"
"Dust powdered sugar over tray Tray1","{'type':'command','expressions':[['|exists x1 (powderedSugar(x1)).| >= 1']],'commands':['abe(x0) & powderedSugar(x1) & bakingTray(Tray1) -> sprinkle(x0, x1, Tray1).']}"
"Sprinkle the contents of PowderedSugar1 over BakingTray1","{'type':'command','expressions':[[]],'commands':['abe(x0) -> sprinkle(x0, PowderedSugar1, BakingTray1).']}"
"Sprinkle the contents of powdered sugar PS1 over BT1","{'type':'command','expressions':[[]],'commands':['abe(x0) & powderedSugar(PS1) -> sprinkle(x0, PS1, BT1).']}"
"Shape contents of bowl and place the results into a baking tray","{'type':'command','expressions':[['|exists x1 (bowl(x1)).| >= 1','|exists x2 (bakingTray(x2)).| >= 1']],'commands':['abe(x0) & bowl(x1) & bakingTray(x2) -> shape(x0, x1, x2).']}"
"Shape LargeBowl1 into clumps and place them into a baking tray","{'type':'command','expressions':[['|exists x2 (bakingTray(x2)).| >= 1']],'commands':['abe(x0) & bakingTray(x2) -> shape(x0, LargeBowl1, x2).']}"
"Shape bowl LargeBowl1 into clumps and place them into a baking tray","{'type':'command','expressions':[['|exists x2 (bakingTray(x2)).| >= 1']],'commands':['abe(x0) & bowl(LargeBowl1) & bakingTray(x2) -> shape(x0, LargeBowl1, x2).']}"
"Shape largeBowl1 and put it inside bakingTray1","{'type':'command','expressions':[[]],'commands':['abe(x0) -> shape(x0, LargeBowl1, BakingTray1).']}"
"Mold LargeBowl1 and put the clumps into BakingTray1","{'type':'command','expressions':[[]],'commands':['abe(x0) -> shape(x0, LargeBowl1, BakingTray1).']}"
"Shape 2 baking trays and put the clumps into baking tray","{'type':'command','expressions':[['|exists x1 (bakingTray(x1)).| >= 1','|exists x2 (bakingTray(x2)).| >= 1']],'commands':['abe(x0) & bakingTray(x1) & bakingTray(x2)-> shape(x0, x1, x2).']}"
"Most vegetables are red onions","{'type':'query','expressions':['|exists x0 (vegetable(x0) & redOnion(x0)).| > |exists x0 (vegetable(x0) & -redOnion(x0)).|']}"
"Most cutting tools are cooking knives","{'type':'query','expressions':['|exists x0 (cuttingTool(x0) & cookingKnife(x0)).| > |exists x0 (cuttingTool(x0) & -cookingKnife(x0)).|']}"
"Majority of cutting tools are knives","{'type':'query','expressions':['|exists x0 (cuttingTool(x0) & cookingKnife(x0)).| > |exists x0 (cuttingTool(x0) & -cookingKnife(x0)).|']}"
"Majority of peppers are green chili peppers","{'type':'query','expressions':['|exists x0 (pepper(x0) & greenChiliPepper(x0)).| > |exists x0 (pepper(x0) & -greenChiliPepper(x0)).|']}"
"There are twice as many onions than carrots","{'type':'query','expressions':['|exists x0 (onion(x0)).| == 2 * |exists x0 (carrot(x0)).|']}"
"There are two kitchen counters","{'type':'query','expressions':['|exists x0 (kitchenCounter(x0)).| >= 2']}"
"There are exactly 2 ovens","{'type':'query','expressions':['|exists x0 (oven(x0)).| == 2']}"
"At least 2 cutting boards?","{'type':'query','expressions':['|exists x0 (cuttingBoard(x0)).| >= 2']}"
"There are at most three broccoli stems","{'type':'query','expressions':['|exists x0 (broccoliStem(x0)).| <= 3']}"
"Less than 10 tea spoons","{'type':'query','expressions':['|exists x0 (teaSpoons(x0)).| < 10']}"
"There are more small bowls than large bowls","{'type':'query','expressions':['|exists x0 (smallBowl(x0)).| > |exists x0 (largeBowl(x0)).|']}"
"There are more onions than carrots and broccoli combined","{'type':'query','expressions':['|exists x0 (onion(x0)).| > |exists x0 (carrot(x0)).| + |exists x0 (broccoli(x0)).|']}"
"More green chili peppers than red chili peppers","{'type':'query','expressions':['|exists x0 (greenChiliPepper(x0)).| > |exists x0 (redChiliPepper(x0)).|']}"
"There are less apples than pears","{'type':'query','expressions':['|exists x0 (apple(x0)).| < |exists x0 (pear(x0)).|']}"
"There are less green chili peppers than red chili peppers","{'type':'query','expressions':['|exists x0 (greenChiliPepper(x0)).| < |exists x0 (redChiliPepper(x0)).|']}"
"There are many onions","{'type':'query','expressions':['|exists x0 (onion(x0)).| >= 10']}"
"There are not many small bowls","{'type':'query','expressions':['|exists x0 (smallBowl(x0)).| <= 10']}"
"There is a cup","{'type':'query','expressions':['|exists x0 (cup(x0)).| >= 1']}"
"There is exactly one cup","{'type':'query','expressions':['|exists x0 (cup(x0)).| == 1']}"
"There are several bread slices","{'type':'query','expressions':['|exists x0 (breadSlice(x0)).| >= 3']}"
"There are only a few onions","{'type':'query','expressions':['|exists x0 (onion(x0)).| <= 3']}"
"There are quite a few onions","{'type':'query','expressions':['|exists x0 (onion(x0)).| <= 3']}"
"There are some red chili peppers","{'type':'query','expressions':['|exists x0 (redChiliPepper(x0)).| >= 4']}"
"There are more than a few spatulas","{'type':'query','expressions':['|exists x0 (spatula(x0)).| > 3']}"
"There are 2 times more broccoli stems than forks","{'type':'query','expressions':['|exists x0 (broccoliStem(x0)).| == 2 * |exists x0 (fork(x0)).|']}"
"There are 3 times more potatoes than tomatoes","{'type':'query','expressions':['|exists x0 (potato(x0)).| == 3 * |exists x0 (tomato(x0)).|']}"
"There are several times more broccoli stems than cherry tomatoes","{'type':'query','expressions':['|exists x0 (broccoliStem(x0)).| >= 3 * |exists x0 (cherryTomato(x0)).|']}"
"There are half a dozen eggs","{'type':'query','expressions':['|exists x0 (egg(x0)).| >= 6']}"
"There are exactly half a dozen eggs","{'type':'query','expressions':['|exists x0 (egg(x0)).| == 6']}"
"There are exactly a dozen doughnuts","{'type':'query','expressions':['|exists x0 (doughnut(x0)).| == 12']}"
"There are less than a dozen doughnuts","{'type':'query','expressions':['|exists x0 (doughnut(x0)).| < 12']}"
"How many baking trays are there?","{'type':'query','expressions':['|exists x0 (bakingTray(x0)).|']}"
"How many green chili peppers are there in the kitchen?","{'type':'query','expressions':['|exists x0 (greenChiliPepper(x0)).|']}"
"Tell me the number of avocados","{'type':'query','expressions':['|exists x0 (avocado(x0)).|']}"
"Count the number of onions","{'type':'query','expressions':['|exists x0 (onion(x0)).|']}"
"Count the carrots","{'type':'query','expressions':['|exists x0 (carrot(x0)).|']}"
"No vegetable is a carrot","{'type':'query','expressions':['|-(exists x0 (vegetable(x0) & carrot(x0))).| > 0']}"
"There are no onions","{'type':'query','expressions':['|-(exists x0 (onion(x0))).| > 0']}"
"No onions in the kitchen","{'type':'query','expressions':['|-(exists x0 (onion(x0))).| > 0']}"
"All vegetables are baby carrots","{'type':'query','expressions':['all x0 (vegetable(x0) -> babyCarrots(x0)).']}"
"All peppers are red chilli peppers","{'type':'query','expressions':['all x0 (pepper(x0) -> redChilliPepper(x0)).']}"
"Every bowl is a large bowl","{'type':'query','expressions':['all x0 (bowl(x0) -> largeBowl(x0)).']}"
"All onions are not red onions","{'type':'query','expressions':['all x0 (onion(x0) -> -redOnion(x0)).']}"
"No cheese is feta cheese","{'type':'query','expressions':['all x0 (cheese(x0) -> -fetaCheese(x0)).']}"
"Not all cheese is feta cheese","{'type':'query','expressions':['exists x0 (cheese(x0) & -fetaCheese(x0)).' >= 1]}"
"Not every onion is a red onion","{'type':'query','expressions':['exists x0 (onion(x0) & -redOnion(x0)).' >= 1]}"